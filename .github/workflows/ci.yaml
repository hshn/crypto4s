name: CI

on:
  push:
    branches:
    - main
    tags:
    - 'v*'
  pull_request:
    branches:

permissions:
  contents: read
  actions: read
  checks: write

env:
  SCALA_VERSION: 3.5.1

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Set up JDK
      uses: actions/setup-java@v5
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: 'sbt'

    - uses: sbt/setup-sbt@v1

    - name: Cache compilation
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-compilation-${{ env.SCALA_VERSION }}
        restore-keys: |
          ${{ runner.os }}-compilation-${{ env.SCALA_VERSION }}
        path:
          projects/**/target/scala-*
        lookup-only: ${{ github.ref != 'refs/heads/main' }}

    - name: Compile
      run: sbt "Test / compile"

    - name: test
      run: sbt "Test / test"

    - uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: test-reports
        path: '**/target/test-reports/*.xml'
  publish:
    name: Publish Artifacts
    runs-on: ubuntu-latest
    environment: Publish
    needs: [build]
    if: (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up JDK
      uses: actions/setup-java@v5
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: 'sbt'

    - uses: sbt/setup-sbt@v1

    - name: Cache compilation
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-compilation-${{ env.SCALA_VERSION }}
        restore-keys: |
          ${{ runner.os }}-compilation-${{ env.SCALA_VERSION }}
        path:
          projects/**/target/scala-*
        lookup-only: true

    - uses: sbt/setup-sbt@v1
    - name: Publish to Sonatype
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      run: sbt ci-release
